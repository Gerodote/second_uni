#include <iostream>
#include <stdexcept>
#include <string>
#include <cstdint>
#include <exception>
#include <random>
 
int main(int argc, char **argv)
{
    uint64_t size_of_password = 25;
    if (argc == 2) {
        try {
            size_of_password = std::stoull(argv[1]);
        }
        catch(std::invalid_argument const& ex)
        {
            std::cout << "std::invalid_argument::what(): " << ex.what() << '\n';
            return 1;
        }
        catch(std::out_of_range const& ex)
        {
            std::cout << "std::out_of_range::what(): " << ex.what() << '\n';
            return 2;
        }
    }
    std::random_device rd;  // Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); // Standard mersenne_twister_engine seeded with rd()
    std::uniform_int_distribution<> distrib(' ', '~');
 
    // Use distrib to transform the random unsigned int
    // generated by gen into an int in [1, 6]
    for (int n = 0; n != size_of_password; ++n)
        std::cout << static_cast<signed char>(distrib(gen));
    std::cout << '\n';
}
